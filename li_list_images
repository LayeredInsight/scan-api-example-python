#!/usr/bin/env python
# Copyright (C) 2018 Layered Insight - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential

from __future__ import print_function
import argparse
from pprint import pprint
import sys
import layint_scan_api
from layint_scan_api.rest import ApiException
from vyper import v
from li_utils.envtools import env_setup

# Parse CLI
parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="Verbose logging", action="store_true")
parser.add_argument("-n", "--numrecords", help="Maximum number of records to display")
args = parser.parse_args()

env_setup()

layint_scan_api.configuration.api_key['Authorization'] = v.get("api_key")

image_api = layint_scan_api.ImagesApi()
image_api.api_client.host = v.get("api_host")

max_records = 50
if args.numrecords:
    max_records = args.numrecords

if args.verbose:
    print("Fetching registriess from API host %s..." % (v.get("api_host")))
try:
    api_result = image_api.get_images(page_size=max_records)
except ApiException as e:
    print("Exception when calling ImageApi->get_images: %s\n" % e)
    sys.exit(1)

if args.verbose:
    print("results:")
    pprint(api_result)

print(" ID - name")
for image in api_result['Images']:
    print(" %s - %s" % (image['Sid'], image['ImageName']))

if args.verbose:
    print("Registry fetched successfully.")
